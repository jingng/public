---
title: "Telling Stories with Data - Study"
format: html
editor: visual
---

## Reproducible workflows

## Quarto

### Top matter

```         
---
title: "My document"
author: "Your Name"
date: format(Sys.time(), "%d %B %Y")
abstract: "This is my abstract."
format: html
---
```

### Essential Commands

-   Emphasis: `*italic*`, `**bold**`

-   Headers (these go on their own line with a blank line before and after):

```         
         # First level header
         
         ## Second level header
         
         ### Third level header
```

-   Unordered list, with sub-lists:

```         
    * Item 1
    * Item 2
        + Item 2a
        + Item 2b
```

-   Ordered list, with sub-lists:

```         
    1. Item 1
    2. Item 2
    3. Item 3
        + Item 3a
        + Item 3b
```

-   URLs can be added: `[this book](https://www.tellingstorieswithdata.com)` results in [this book](https://www.tellingstorieswithdata.com/).

-   A paragraph is created by leaving a blank line.

    ### Evaluation Options in R chunks

-   `echo`: This controls whether the code itself is included in the document. For instance, `#| echo: false` would mean the code will be run and its output will show, but the code itself would not be included in the document.

-   `include`: This controls whether the output of the code is included in the document. For instance, `#| include: false` would run the code, but would not result in any output, and the code itself would not be included in the document.

-   `eval`: This controls whether the code should be included in the document. For instance, `#| eval: false` would mean that the code is not run, and hence there would not be any output to include, but the code itself would be included in the document.

-   `warning`: This controls whether warnings should be included in the document. For instance, `#| warning: false` would mean that warnings are not included.

-   `message`: This controls whether messages should be included in the document. For instance, `#| message: false` would mean that messages are not included in the document.

## R Projects

Used so that files exist in relation to the base of the R project, not the base of the computer. The main advantage of using R Project is with file referencing. For instance, instead of reading a CSV from, say, `"~/Documents/projects/book/data/"` you can read it from `book/data/`.

## Github

To set up a new project, here are the following steps:

1.  Create new repository in Github

    1.  Check "Initialize this repository with a README"
    2.  Change "Add.gitignore" to R

2.  Copy link to clipboard

3.  Return to RStudio and create a new project

    1.  File -\> New project -\> Version control -\> Git
    2.  Paste URL
    3.  Check "Open in a new session"
    4.  Click "Create Project"

4.  Use a Personal Access Token (PAT) to link our RStudio Workspace with Github

    ```{r}
    #| eval: false
    install.packages("usethis")

    # set your user name and email
    usethis::use_git_config(user.name = "YourName", user.email = "your@mail.ca")

    # create a personal access token for authentication
    usethis::create_github_token()
    ```

```{=html}
<!-- -->
```
5.  Replace Note with "PAT for Rstudio" and generate token

    ```{r}
    #| eval: false
    credentials::set_github_pat("YourPAT")
    ```

6.  Maintain using pull, commit, and push
